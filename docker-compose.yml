version: "3.7"

services:
  api-gateway:
    build:
      context: ./${API_GATEWAY}/build
      target: ${API_GATEWAY}
    image: ${API_GATEWAY}:latest
    restart: on-failure
    ports:
      - ${API_GATEWAY_PORT}:${API_GATEWAY_PORT}
    environment:
      - PORT=${API_GATEWAY_PORT}
      - SVC_ADS_ADDRESS=${SVC_ADS}:${SVC_ADS_PORT}
      - SVC_AUTH_ADDRESS=${SVC_AUTH}:${SVC_AUTH_PORT}
      - LOG_LEVEL=${LOG_LEVEL:-default}
    depends_on:
      - ${SVC_ADS}
      - ${SVC_AUTH}
    container_name: ${API_GATEWAY}

  svc-ads:
    build:
      context: ./${SVC_ADS}/build
      target: ${SVC_ADS}
    image: ${SVC_ADS}:latest
    restart: on-failure
    ports:
      - ${SVC_ADS_PORT}:${SVC_ADS_PORT}
    environment:
      - PORT=${SVC_ADS_PORT}
      - DB_HOST=${DB_ADS}
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_DBNAME=postgres
      - DB_SSL=disable
      - SVC_AUTH_ADDRESS=${SVC_AUTH}:${SVC_AUTH_PORT}
      - LOG_LEVEL=${LOG_LEVEL:-default}
    depends_on:
      - ${DB_ADS}
    container_name: ${SVC_ADS}

  svc-auth:
    build:
      context: ./${SVC_AUTH}/build
      target: ${SVC_AUTH}
    image: ${SVC_AUTH}:latest
    restart: on-failure
    ports:
      - ${SVC_AUTH_PORT}:${SVC_AUTH_PORT}
    environment:
      - GRPC_GO_LOG_VERBOSITY_LEVEL=99
      - GRPC_GO_LOG_SEVERITY_LEVEL=info
      - PORT=${SVC_AUTH_PORT}
      - DB_HOST=${DB_AUTH}
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_DBNAME=postgres
      - DB_SSL=disable
      - LOG_LEVEL=${LOG_LEVEL:-default}
    depends_on:
      - ${DB_AUTH}
    container_name: ${SVC_AUTH}

  db-ads:
    build:
      context: ./${DB_ADS}/build
      target: ${DB_ADS}
    image: ${DB_ADS}:latest
    restart: always
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
    ports:
      - ${DB_ADS_PORT}:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 20
    container_name: ${DB_ADS}

  db-auth:
    build:
      context: ./${DB_AUTH}/build
      target: ${DB_AUTH}
    image: ${DB_AUTH}:latest
    restart: always
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
    ports:
      - ${DB_AUTH_PORT}:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 20
    container_name: ${DB_AUTH}

